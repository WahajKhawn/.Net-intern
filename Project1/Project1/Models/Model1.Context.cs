//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project1.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class empEntities : DbContext
    {
        public empEntities()
            : base("name=empEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<ROLE> ROLEs { get; set; }
    
        public virtual ObjectResult<sp_deptdropdown_Result> sp_deptdropdown()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_deptdropdown_Result>("sp_deptdropdown");
        }
    
        public virtual int sp_listemp(string empName, string empEmail, Nullable<int> empAge, string empAddress, Nullable<int> fkdeptid)
        {
            var empNameParameter = empName != null ?
                new ObjectParameter("empName", empName) :
                new ObjectParameter("empName", typeof(string));
    
            var empEmailParameter = empEmail != null ?
                new ObjectParameter("empEmail", empEmail) :
                new ObjectParameter("empEmail", typeof(string));
    
            var empAgeParameter = empAge.HasValue ?
                new ObjectParameter("empAge", empAge) :
                new ObjectParameter("empAge", typeof(int));
    
            var empAddressParameter = empAddress != null ?
                new ObjectParameter("empAddress", empAddress) :
                new ObjectParameter("empAddress", typeof(string));
    
            var fkdeptidParameter = fkdeptid.HasValue ?
                new ObjectParameter("fkdeptid", fkdeptid) :
                new ObjectParameter("fkdeptid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_listemp", empNameParameter, empEmailParameter, empAgeParameter, empAddressParameter, fkdeptidParameter);
        }

     
        public virtual int sp_deleteemp(Nullable<int> employee_ID)
        {
            var employee_IDParameter = employee_ID.HasValue ?
                new ObjectParameter("employee_ID", employee_ID) :
                new ObjectParameter("employee_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteemp", employee_IDParameter);
        }
    
        public virtual ObjectResult<slctEmpByName_Result> slctEmpByName(string empName)
        {
            var empNameParameter = empName != null ?
                new ObjectParameter("empName", empName) :
                new ObjectParameter("empName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<slctEmpByName_Result>("slctEmpByName", empNameParameter);
        }
    
        public virtual ObjectResult<sp_getemplist_Result2> sp_getemplist()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getemplist_Result2>("sp_getemplist");
        }
    
        public virtual int editemplist(Nullable<int> employee_ID, string employeeName, string email, Nullable<int> age, string address, Nullable<int> dept_ID)
        {
            var employee_IDParameter = employee_ID.HasValue ?
                new ObjectParameter("employee_ID", employee_ID) :
                new ObjectParameter("employee_ID", typeof(int));
    
            var employeeNameParameter = employeeName != null ?
                new ObjectParameter("employeeName", employeeName) :
                new ObjectParameter("employeeName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var dept_IDParameter = dept_ID.HasValue ?
                new ObjectParameter("dept_ID", dept_ID) :
                new ObjectParameter("dept_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("editemplist", employee_IDParameter, employeeNameParameter, emailParameter, ageParameter, addressParameter, dept_IDParameter);
        }
    }
}
